swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
          
  /user/account/{accountId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Find account API
      description: API to retrieve an account and all its transactions
      operationId: getAccountById
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: accountId
          description: ID of the account to return
          required: true
          type: string
          minimum: 1
      produces:
        - application/json
      responses:
        '200':
          description: Account successfully found
          schema:
            $ref: '#/definitions/Account'
        '400':
          description: Invalid ID supplied
        '404':
          description: Account not found
        '500':
          description: Internal Server Error
          
  /user/transaction/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Find transaction API
      description: API to retrieve one transaction
      operationId: getTransactionById
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          description: ID of the transaction to return
          required: true
          type: string
          minimum: 1
      produces:
        - application/json
      responses:
        '200':
          description: Transaction successfully found
          schema:
            $ref: '#/definitions/TransactionInfo'
        '400':
          description: Invalid ID supplied
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
  
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update transaction API
      description: API for updating transaction information
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: path
          name: transactionId
          description: ID of the transaction to return
          required: true
          type: string
          minimum: 1
        - in: body
          name: body
          description: Update transaction information
          required: true
          schema:
            $ref: '#/definitions/TransactionInfo'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction successfully updated
          schema:
            $ref: '#/definitions/ApiTransactionResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
        
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
        
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Success"
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
            
  LoginResponse:
    type: object
    properties:
      token:
        type: string
        
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
          
  Account:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Success"
      data:
        type: object
        properties:
          transactions:
            type: array
            items:
              type: object
              properties:
                transactionId:
                  type: integer
                  format: int64
                  example: 1
                date:
                  type: string
                  example: "October 21th, 2023"
                description:
                  type: string
                  example: "Retrait DAB"
                amount:
                  type: number
                  example: 50.0
                balance:
                  type: number
                  example: 184.3
          
  TransactionInfo:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Success"
      data:
        type: object
        properties:
          transactionInfo:
            type: object
            properties:
              type:
                type: string
                example: expense
              category:
                type: string
                example: food
              note:
                type: string
                example: Big Fernand with mom

  ApiTransactionResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Success"
      body:
        type: object
        properties:
          date:
            type: string
            example: October 21th, 2023
          description:
            type: string
            example: Retrait DAB
          amount:
            type: number
            example: 50.0
          balance:
            type: number
            example: 184.3
          informations:
            type: object
            properties:
              type:
                type: string
                example: ""
              category:
                type: string
                example: ""
              note:
                type: string
                example: ""